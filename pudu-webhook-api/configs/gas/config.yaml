---
# Gas Robot Brand Configuration
# Handles callback type mapping, field mapping, and verification

brand: gas

# Verification configuration
verification:
  method: body  # Gas uses body-based verification
  key: appId  # Body field name for verification

# Callback type mappings: Gas messageTypeId -> abstract type
type_mappings:
  "1": error_event  # Incident callback
  "2": report_event  # Task report (cleaning report)

# No delivery callbacks to ignore for Gas
ignored_types: []

# Field mappings for each abstract type
field_mappings:
  # Error/Incident event mapping (messageTypeId = 1)
  error_event:
    source_to_db:
      payload.serialNumber: robot_sn
      payload.content.incidentId: event_id
      payload.content.incidentCode: error_id
      payload.content.incidentName: event_type
      payload.content.incidentLevel: event_level
      payload.content.incidentStatus: incident_status  # Gas-specific field (nullable)
      messageTimestamp: task_time
    conversions:
      event_level:
        type: lowercase
        mapping:
          # Map Gas incident levels to unified levels
          "H7": "fatal"
          "H6": "error"
          "H5": "warning"
          "H4": "error"
          "H3": "warning"
          "H2": "event"
          "H1": "event"
          "H0": "event"
      task_time:
        type: timestamp_ms_to_s  # Gas uses milliseconds, DB uses seconds
      event_type:
        type: lowercase
    # Extra brand-specific fields to store as JSON
    extra_fields:
      - payload.content.taskId
      - payload.content.startTime
      - payload.content.endTime
      - payload.content.incidentStatus
    drop_fields:
      # Gas-specific fields not in unified schema
      - traceId
      - messageId
      - productId
      - messageTypeId
      - appId

# Task report event (messageTypeId = 2)
  report_event:
    source_to_db:
      # Basic mappings
      payload.serialNumber: robot_sn
      payload.modelTypeCode: robot_type
      payload.taskReport.taskInstanceId: task_id
      payload.taskReport.displayName: task_name
      payload.taskReport.startTime: start_time
      payload.taskReport.endTime: end_time
      payload.taskReport.completionPercentage: progress
      payload.taskReport.durationSeconds: duration
      payload.taskReport.plannedCleaningAreaSquareMeter: plan_area
      payload.taskReport.actualCleaningAreaSquareMeter: actual_area
      payload.taskReport.efficiencySquareMeterPerHour: efficiency
      payload.taskReport.waterConsumptionLiter: water_consumption
      payload.taskReport.cleaningMode: mode
      payload.taskReport.taskEndStatus: status
      payload.taskReport.taskReportPngUri: map_url

    conversions:
      start_time:
        type: timestamp_ms_to_s
      end_time:
        type: timestamp_ms_to_s
      progress:
        type: float
      duration:
        type: int
      plan_area:
        type: float
      actual_area:
        type: float
      efficiency:
        type: float
      water_consumption:
        type: multiply_by_1000  # L to mL (multiply by 1000)
      mode:
        type: translate_cleaning_mode
      status:
        # Map Gas task status codes to common text strings
        mapping:
          -1: "Unknown"         # Unknown
          0: "Task Ended"        # Normal (completed successfully)
          1: "Manual"           # Manual
          2: "Task Abnormal"         # Abnormal
          3: "Task Failed"           # Startup Failed

    # Calculated fields (NEW)
    calculations:
      battery_usage:
        operation: subtract
        fields:
          - payload.taskReport.startBatteryPercentage
          - payload.taskReport.endBatteryPercentage

    field_processors:
      map_name:
        processor: extract_map_names
        source: payload.taskReport.subTasks
        config:
          map_name_field: mapName
          delimiter: ", "
          max_items: null

    # Extra brand-specific fields to store as JSON
    extra_fields:
      - payload.taskReport.subTasks
      - payload.taskReport.consumablesResidualPercentage
      - payload.taskReport.areaNameList
      - payload.taskReport.operator
      - payload.taskReport.robot
      - payload.modelTypeCode

    # Fields to drop (no longer needed since we're storing extras as JSON)
    drop_fields:
      - traceId
      - messageId
      - productId
      - messageTypeId
      - appId