---
# Dynamic Database Configuration for Robot Webhook API
# Main database is hardcoded, project databases are dynamically resolved

# Main control database (hardcoded)
main_database: "ry-vue"

# List of databases that need notifications (can include dynamic ones)
notification_needed:
  - "project"

# List of databases that support coordinate transformations
# for us-east-1, we only support foxx_irvine_office
# for us-east-2, we only support university_of_florida
transform_supported_databases:
  - "university_of_florida"

# Table configurations
# Use "main" for main database
# "project" for dynamically resolved project databases
tables:
  # Robot Status/Pose/Power updates go to management table
  robot_status:
    - database: "project"
      table_name: "mnt_robots_management"
      primary_keys: ["robot_sn"]
      fields: null
      description: "Robot status table in project database"

  robot_info:
    - database: "main"
      table_name: "mnt_robots_management"
      primary_keys: ["robot_sn"]
      fields: null
      description: "Robot information table for getting robot names"

  robot_work_location:
    - database: "project"
      table_name: "mnt_robots_work_location"
      primary_keys: ["robot_sn", "update_time"]
      fields: null
      description: "Robot work location table in project database"

  # Robot Events/Errors go to events table
  robot_events:
    - database: "project"
      table_name: "mnt_robot_events"
      primary_keys: ["robot_sn", "event_id"]
      fields: null
      description: "Robot events table in project database"
